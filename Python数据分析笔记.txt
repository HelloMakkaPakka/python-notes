数据分析步骤 :
    分析需求 ：确定进行数据分析任务要解决什么问题，拆解问题，包括我们从哪些角度来分析这个问题，采用哪些方法和数据指标
    收集数据 ：采集第一步确定的数据
    整理数据 ：把获取的杂乱无章的数据按照我们需要的维度进行整理
    分析数据 ：采用数学方法、统计方法等对数据进行分析操作
    数据可视化 ：将分析结果以直观的形式进行展示

NumPy(Numerical Python) : [1. 1. 1.]
    通过 import numpy as np 导入 NumPy 包
    ndarray(N-dimensional array) : 多维数组
        多维数组间的四则运算 : 对应位置的元素一一进行运算
        多维数组直接和数字进行计算 : 运算作用在数组中的每个元素上，在 numpy 中被称为 Broadcasting
    方法
        np.array(#元素) : 创建一个多维数组
        np.ones(#x) : 生成一个 包含x个浮点数1的一维数组
        np.zeros(#x) : 生成一个 包含x个浮点数0的一维数组
        np.ones(#x, #y) : 生成一个 包含x个 包含y个浮点数1的一维数组 的二维数组
        np.zeros(#x, #y) : 生成一个 包含x个 包含y个浮点数0的一维数组 的二维数组
        np.ones(#x, #y, #z) : 生成一个 包含z个 包含x个 包含y个浮点数1的一维数组 的二维数组 的三维数组
        np.zeros(#x, #y, #z) : 生成一个 包含z个 包含x个 包含y个浮点数0的一维数组 的二维数组 的三维数组
    矢量化 : 在 numpy 不用编写循环就可以对数据进行批量运算的方式
    索引 : 从 0 开始，写法和列表索引一样，也适用反向索引
    分片 : 
        和列表的分片基本类似，如data[m:n]，左闭右开区间，也支持反向分片
        列表分片是将分片后的数据复制了一份，多维数组的分片是返回原数据其中的一块
        视图(View) : 数组分片默认不会复制一份副本，而是返回原数据中称为 视图 的一块
        复制分片 : #arr_data[:].copy()
        步长 : 分片的第三个参数，每隔几个数据取一次值，默认为 1，步长为负数时会将顺序反转
    通用方法 : 直接在多维数组上调用 #data.max() 或在 numpy 上调用并传入数据 np.max(#data)
        .mean() : 求平均值
        .max() : 求最大值
        .min() : 求最小值
        .sum() : 求和
        集中趋势 : 一组数据所具有的共同趋势，代表一组数据的总体水平
            .mean() 平均数 : 对异常数值不敏感，容易得到误导性的结论
            np.median(#data) 中位数 : 数据排序后处于中间的那个数
            无直接计算的方法 众数 : 一组数据中出现次数最多的数
        离中趋势 : 一组数据中各数据值以不同程度的距离偏离其中心（平均数）的趋势
            .ptp() 极差 : 一组数据的最大值减去最小值。反映数据变动的最大范围
            .var() 方差 : 将一组数据中的每个数减去这组数据的平均数，然后将得到的结果平方求和，再除以数据的个数。量纲（单位）和原数据不一致
            .std() 标准差 : 方差的平方根。量纲和原数据一致，使用起来更方便。和方差都能反映数据的离散程度（波动程度），数值越小说明数据更稳定
    其它：
        np 会省略小数点后的 0 ，通过传入 dtype参数 np.ones(dtype='int') 来指定生成类型